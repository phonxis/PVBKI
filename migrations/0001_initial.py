# Generated by Django 2.1.4 on 2019-02-22 08:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип')),
                ('location_id', models.IntegerField(blank=True, null=True, verbose_name='Локация')),
                ('street_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Адрес')),
                ('street_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Адрес')),
                ('street_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Адрес')),
                ('postal_code', models.CharField(blank=True, max_length=16, verbose_name='Индекс')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Collateral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contractid', models.IntegerField(blank=True, null=True, verbose_name='ID договора')),
                ('type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Значение')),
                ('currency', models.CharField(blank=True, max_length=10, verbose_name='Валюта')),
                ('address_type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип адреса')),
                ('location_id', models.IntegerField(blank=True, null=True, verbose_name='Локация')),
                ('street_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Адрес')),
                ('street_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Адрес')),
                ('street_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Адрес')),
                ('postal_code', models.CharField(blank=True, max_length=16, verbose_name='Индекс')),
                ('identification_type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип документа')),
                ('number', models.TextField(blank=True, verbose_name='Номер')),
                ('registrationDate', models.DateTimeField(blank=True, null=True, verbose_name='Дата регистрации')),
                ('issueDate', models.DateTimeField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('expirationDate', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания срока годности')),
                ('authority_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Кем выдан')),
                ('authority_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Кем выдан')),
                ('authority_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Кем выдан')),
            ],
            options={
                'verbose_name': 'Collateral',
                'verbose_name_plural': 'Collaterals',
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип')),
                ('value', models.TextField(blank=True, verbose_name='Номер')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roleId', models.IntegerField(blank=True, null=True, verbose_name='Роль')),
                ('provider', models.IntegerField(blank=True, null=True, verbose_name='Провайдер')),
                ('contractid', models.IntegerField(blank=True, null=True, verbose_name='ID договора')),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления')),
                ('phase_id', models.IntegerField(blank=True, null=True, verbose_name='Фаза')),
                ('currency', models.CharField(blank=True, max_length=10, verbose_name='Валюта')),
                ('date_of_signature', models.DateTimeField(blank=True, null=True, verbose_name='Дата подписания')),
                ('credit_purpose', models.IntegerField(blank=True, null=True, verbose_name='Цель кредита')),
                ('negative_status', models.IntegerField(blank=True, null=True, verbose_name='Негативный статус')),
                ('application_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата подачи заявки')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала')),
                ('expected_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Предположительная дата окончания')),
                ('factual_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Фактическая дата окончания')),
                ('type', models.CharField(blank=True, max_length=16, verbose_name='Тип')),
                ('payment_method_id', models.IntegerField(blank=True, null=True, verbose_name='Способ оплаты')),
                ('payment_period_id', models.IntegerField(blank=True, null=True, verbose_name='Период оплаты')),
                ('actual_currency', models.CharField(blank=True, help_text='actual currency', max_length=10, verbose_name='Валюта')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Итоговая сумма')),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Кредитный лимит')),
                ('instalment_count', models.IntegerField(blank=True, null=True, verbose_name='Количество платежей')),
                ('instalment_amount_currency', models.CharField(blank=True, help_text='instalment amount currency', max_length=10, verbose_name='Валюта взноса')),
                ('instalment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма взноса')),
                ('rest_instalment_count', models.IntegerField(blank=True, null=True, verbose_name='Количество оставшихся платежей')),
                ('rest_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Непогашенная сумма')),
                ('overdue_count', models.IntegerField(blank=True, null=True, verbose_name='Количество просроченных платежей')),
                ('overdue_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Просроченная сумма')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договора',
            },
        ),
        migrations.CreateModel(
            name='Dependant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип')),
                ('count', models.IntegerField(blank=True, null=True, verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Dependant',
                'verbose_name_plural': 'Dependants',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.IntegerField(blank=True, null=True, verbose_name='Провайдер')),
                ('event', models.CharField(blank=True, max_length=16, verbose_name='Событие')),
                ('when', models.DateTimeField(blank=True, null=True, verbose_name='Дата события')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.IntegerField(blank=True, null=True, verbose_name='Тип')),
                ('number', models.TextField(blank=True, verbose_name='Номер')),
                ('registration_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата регистрации')),
                ('issue_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания срока годности')),
                ('authority_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Кем выдан')),
                ('authority_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Кем выдан')),
                ('authority_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Кем выдан')),
            ],
            options={
                'verbose_name': 'Идентификационный документ',
                'verbose_name_plural': 'Идентификационные документы',
            },
        ),
        migrations.CreateModel(
            name='MonthlyIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Значение')),
                ('currency', models.CharField(blank=True, max_length=10, verbose_name='Валюта')),
            ],
            options={
                'verbose_name': 'Месячный доход',
                'verbose_name_plural': 'Месячный доход',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contractid', models.IntegerField(blank=True, null=True, verbose_name='ID договора')),
                ('accounting_date', models.DateTimeField(blank=True, null=True, verbose_name='Accounting Date')),
                ('credit_usage', models.IntegerField(blank=True, null=True, verbose_name='Использование кредита')),
                ('rest_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Оставшаяся сумма')),
                ('rest_currency', models.CharField(blank=True, max_length=10, verbose_name='Валюта оставшейся суммы')),
                ('rest_instalment_count', models.IntegerField(blank=True, null=True, verbose_name='Оставшееся количество платежей')),
                ('overdue_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Просроченная сумма')),
                ('overdue_currencyoverdue_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Валюта просроченной суммы')),
                ('overdue_countrest_instalment_count', models.IntegerField(blank=True, null=True, verbose_name='Количество просроченных платежей')),
            ],
            options={
                'verbose_name': 'Record',
                'verbose_name_plural': 'Records',
            },
        ),
        migrations.CreateModel(
            name='Scoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(blank=True, max_length=16, verbose_name='Оценка')),
                ('score', models.IntegerField(blank=True, null=True, verbose_name='Рейтинг')),
                ('fault_chance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Вероятность дефолта')),
                ('adverse', models.IntegerField(blank=True, null=True, verbose_name='Adverse')),
            ],
            options={
                'verbose_name': 'Scoring',
                'verbose_name_plural': 'Scoring',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestid', models.TextField(blank=True, verbose_name='ID запроса')),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='ID запроса')),
                ('entity', models.TextField(blank=True, verbose_name='Сущность')),
                ('gender', models.IntegerField(blank=True, null=True, verbose_name='Пол')),
                ('surname_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Фамилия')),
                ('surname_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Фамилия')),
                ('surname_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Фамилия')),
                ('first_name_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Имя')),
                ('first_name_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Имя')),
                ('first_name_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Имя')),
                ('fathers_name_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Отчество')),
                ('fathers_name_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Отчество')),
                ('fathers_name_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Отчество')),
                ('classification', models.IntegerField(blank=True, null=True, verbose_name='Класификация')),
                ('birth_surname_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Фамилия при рождении')),
                ('birth_surname_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Фамилия при рождении')),
                ('birth_surname_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Фамилия при рождении')),
                ('date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='Дата рождения')),
                ('place_of_birth_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Место рождения')),
                ('place_of_birth_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Место рождения')),
                ('place_of_birth_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Место рождения')),
                ('residency', models.IntegerField(blank=True, null=True, verbose_name='Место жительства')),
                ('citizenship', models.CharField(blank=True, max_length=16, verbose_name='Гражданство')),
                ('negative_status', models.IntegerField(blank=True, null=True, verbose_name='Негативный статус')),
                ('education', models.IntegerField(blank=True, null=True, verbose_name='Образование')),
                ('marital_status', models.IntegerField(blank=True, null=True, verbose_name='Семейное положение')),
                ('name_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Название')),
                ('name_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Название')),
                ('name_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Название')),
                ('abbreviation_ua', models.TextField(blank=True, help_text='(УКР)', verbose_name='Аббревиатура')),
                ('abbreviation_ru', models.TextField(blank=True, help_text='(РУС)', verbose_name='Аббревиатура')),
                ('abbreviation_en', models.TextField(blank=True, help_text='(АНГЛ)', verbose_name='Аббревиатура')),
                ('ownership', models.IntegerField(blank=True, null=True, verbose_name='Форма собственности')),
                ('registration_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата регистрации')),
                ('economic_activity', models.IntegerField(blank=True, null=True, verbose_name='Экономическая деятельность')),
                ('employee_count', models.IntegerField(blank=True, null=True, verbose_name='Количество сотрудников')),
            ],
            options={
                'verbose_name': 'Субъект',
                'verbose_name_plural': 'Субъекты',
            },
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=32, verbose_name='Категория')),
                ('value', models.IntegerField(blank=True, null=True, verbose_name='Значение')),
                ('code', models.CharField(blank=True, max_length=32, verbose_name='Код')),
                ('count', models.IntegerField(blank=True, null=True, verbose_name='Кодичество')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_summaries', to='pvbki.Subject', verbose_name='Субъект')),
            ],
            options={
                'verbose_name': 'Итог',
                'verbose_name_plural': 'Итоги',
            },
        ),
        migrations.AddField(
            model_name='scoring',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_scoring', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='record',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_records', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='monthlyincome',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_incomes', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='identification',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_identifications', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='event',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_events', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='dependant',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_dependants', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='contract',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_contracts', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='communication',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_communications', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_collaterals', to='pvbki.Subject', verbose_name='Субъект'),
        ),
        migrations.AddField(
            model_name='address',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pvbki_addresses', to='pvbki.Subject', verbose_name='Субъект'),
        ),
    ]
